cmake_minimum_required(VERSION 3.11)

# TODO: Add POLICY here.

# Detect if being bundled via sub-directory.
if(NOT DEFINED PROJECT_NAME)
  set(CONTEXTMENUCLEANER_NOT_SUBPROJECT ON)
endif()

project(ContextMenuCleaner CXX)

set_property(GLOBAL PROPERTY USE_FOLDERS ON)

if(CONTEXTMENUCLEANER_NOT_SUBPROJECT)
  set(CMAKE_CXX_STANDARD 17)
  set(CMAKE_CXX_STANDARD_REQUIRED ON)
  set(CMAKE_CXX_EXTENSIONS OFF)

  set(ROOT_DIR ${CMAKE_SOURCE_DIR})
endif()

# TODO: Add options here.

set(CONTEXTMENUCLEANER_DIR ${CMAKE_CURRENT_SOURCE_DIR})
set(CONTEXTMENUCLEANER_CMAKE_DIR ${CONTEXTMENUCLEANER_DIR}/cmake)

include(${CONTEXTMENUCLEANER_CMAKE_DIR}/CPM.cmake)

# Compiler and output configurations.
string (REGEX REPLACE "/W[0-4]" "/W4" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
include(${CONTEXTMENUCLEANER_CMAKE_DIR}/compiler_msvc.cmake)
foreach(OUTPUTCONFIG_TYPE ${CMAKE_CONFIGURATION_TYPES})
  string(TOUPPER ${OUTPUTCONFIG_TYPE} OUTPUTCONFIG)
  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/${OUTPUTCONFIG_TYPE}/bin)
  set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR}/${OUTPUTCONFIG_TYPE}/lib)
endforeach()

if(NOT MSVC)
  message(STATUS "BUILD_TYPE = " ${CMAKE_BUILD_TYPE})
endif()

add_subdirectory(context-menu-cleaner)
