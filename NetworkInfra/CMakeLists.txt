cmake_minimum_required(VERSION 3.5)

project(NetworkInfra CXX)

if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "Release")
endif()

set(CXX_FLAGS
 -g
)

if (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    list(APPEND CXX_FLAGS "-fno-limit-debug-info")
endif()

string(REPLACE ";" " " CMAKE_CXX_FLAGS "${CXX_FLAGS}")

set(CMAKE_CXX_FLAGS_DEBUG "-O0")
set(CMAKE_CXX_FLAGS_RELEASE "-O2 -DNDEBUG")

set(CMAKE_EXE_LINKER_FLAGS "-rdynamic")

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

string(TOUPPER ${CMAKE_BUILD_TYPE} BUILD_TYPE)
message(STATUS "BUILD_TYPE = " ${BUILD_TYPE})
message(STATUS "CXX_FLAGS = " ${CMAKE_CXX_FLAGS})
message(STATUS "CXX_FLAGS_${BUILD_TYPE} = " ${CMAKE_CXX_FLAGS_${BUILD_TYPE}})

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)

if (NOT KBASE_ROOT)
    message(FATAL_ERROR "No KBASE_ROOT specified!")
endif()

set(KBASE_INCLUDE_DIR ${KBASE_ROOT}/src)
set(KBASE_LIB_DIR ${KBASE_ROOT}/build/${CMAKE_BUILD_TYPE}/lib)
message(STATUS "KBASE_INCLUDE_DIR = " ${KBASE_INCLUDE_DIR})
message(STATUS "KBASE_LIB_DIR = " ${KBASE_LIB_DIR})

add_subdirectory(src)
